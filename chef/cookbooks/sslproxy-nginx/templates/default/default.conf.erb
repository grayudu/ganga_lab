
## Upstreams
<% if not @node["sslproxy-nginx"]["upstreams"].nil? and @node["sslproxy-nginx"]["upstreams"].is_a?(Hash) -%>
  <% @node["sslproxy-nginx"]["upstreams"].each do |k, v| -%>
## Configuring upstream <%= k %>
upstream <%= k %> {
   <% if(v.is_a?(Enumerable)) -%>
     <% v.each do |val| -%>
   <%= val %>
     <% end -%>
   <% else -%>
   <%= v %>
   <% end -%>
}
   <% end -%>
   
<% end -%>


server {
    listen       443;

    # SSL defaults
    ssl on;
    ssl_certificate /etc/ssl/<%= node["sslproxy-nginx"]["ssl"]["name"] %>.cer;
    ssl_certificate_key /etc/ssl/<%= node["sslproxy-nginx"]["ssl"]["name"] %>.key;
    server_name <%= node["sslproxy-nginx"]["server-names"] %>;

	#TLS/SSL hardening
	ssl_prefer_server_ciphers On;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS:!EDH-RSA-DES-CBC3-SHA:!DES-CBC3-SHA:!ECDHE-RSA-DES-CBC3-SHA;
#	ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Disable Server Token
    server_tokens off;

    # Log the real client IP in access_log
    set_real_ip_from 10.0.0.0/8;
    real_ip_header proxy_protocol;

    #charset koi8-r;
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    # Enable custom headers
    underscores_in_headers on;

    # Increase the client request body size (default is 1m)
    client_max_body_size 100M;

    # Root Location
<% if @node["sslproxy-nginx"]["root_location"].nil? or @node["sslproxy-nginx"]["root_location"].empty? -%>
    # using basic / location (no upstream reference)
    location / { 
      proxy_set_header X-Forwarded-Host   $host;
      proxy_set_header X-Real-IP          $remote_addr;  
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_pass                          http://127.0.0.1:<%= node["sslproxy-nginx"]["upstream"]["port"] %>;
    }
<% else -%>
    # using custom / location
    location / {
   <% if(@node["sslproxy-nginx"]["root_location"].is_a?(Enumerable)) -%>
     <% @node["sslproxy-nginx"]["root_location"].each do |val| -%>
       <%= val %>
     <% end -%>
   <% else -%>
       <%= v %>
   <% end -%>
    }  
<% end -%>

    ## START Location Generator

<% if not @node["sslproxy-nginx"]["additional_locations"].nil? and @node["sslproxy-nginx"]["additional_locations"].is_a?(Hash) -%>
  <% @node["sslproxy-nginx"]["additional_locations"].each do |k, v| -%>
    ## Configuring Location <%= k %>
    location <%= k %> {
   <% if(v.is_a?(Enumerable)) -%>
     <% v.each do |val| -%>
      <%= val %>
     <% end -%>
   <% else -%>
      <%= v %>
   <% end -%>
    }
   <% end -%>   
<% end -%>

    ## END Location Generator
    
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}

